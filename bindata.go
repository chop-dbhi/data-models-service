// Code generated by go-bindata.
// sources:
// assets/full.md
// assets/index.md
// assets/models.md
// assets/repos.md
// assets/style.css
// assets/wrap.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsFullMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x4d\x8b\xdb\x30\x10\xbd\xeb\x57\x0c\xe8\xd2\x75\x91\x73\xcf\xb5\xa5\x50\xf0\x96\x25\xc9\xf6\x52\x0a\xab\x75\x26\x59\x81\x2c\x07\xcb\x5b\x28\xb2\xfe\x7b\x19\xc9\xb1\x65\xa3\x94\xb0\xbe\x58\xf3\xf1\xe6\xe3\xbd\xe1\xe0\x5c\xe9\x3d\x63\xce\xa9\x13\x94\x5f\xd1\xd6\x9d\xba\xf4\xaa\x35\xde\x3b\xb7\xb6\xd1\x1c\x29\x57\xc0\x4f\xec\xac\x6a\xcd\x96\xd0\xe3\x9b\xe2\x54\x62\x87\x1a\xa5\xc5\xb2\xc2\x3f\xa8\xbd\x67\x02\x46\x4f\x48\x5e\x45\x3f\x27\xae\x3d\x76\x4a\xea\xb9\x8d\x80\xe7\x5d\x15\x40\xcf\xbb\x8a\xda\x72\x0e\x07\xf9\xaa\xd1\xd2\xb4\x9d\x34\x67\x84\x32\x3a\xca\x4a\xd9\xde\x7b\x01\xbf\xc2\x36\xbf\x3f\xf1\x88\xda\xeb\xf7\xb3\xf7\x0f\x6c\x9a\x3c\x8f\xe3\x23\x0b\xe0\x16\xb8\x90\xbf\xa4\x80\xb1\xa2\xf8\xa6\x50\x1f\x6d\x51\x24\xd5\xa2\xeb\xde\x29\xf2\x30\xce\xff\x37\x46\x64\xf6\x84\x1d\x9a\x1a\xad\xf7\x45\x30\x2c\xf4\xed\x36\xb4\x9b\x63\xb1\x6a\x5c\xf0\x3a\x44\x3e\x9a\xcc\x06\x9b\x6c\x95\x9b\xf8\x19\x59\x24\xdc\xae\xb9\x8a\x63\x1f\xfe\x5e\x30\xae\xc7\x61\x5f\xbf\x61\x23\xe9\x82\xc8\xbb\x85\x17\xe7\xc6\xf8\x4b\x4c\xae\xd0\x9c\xfb\xb7\xa0\x7e\x7c\x86\x03\xb8\x7a\xc7\x5e\x31\xf5\xa9\xc3\x5a\xc5\xcb\x63\x02\x26\x2b\x00\x92\xd8\x02\xb3\xaf\x25\xb1\xc2\x04\x84\x57\xc8\x1d\x7d\xb3\x3a\xd3\x3e\x84\x78\x94\x97\x8b\x32\x67\x7b\xdd\xe0\x6a\x33\xf6\xd8\x1e\x51\xc3\x10\x6f\x12\x06\x08\xcc\xc0\x00\x5f\xda\xa6\x41\xd3\x33\x11\xbe\x41\xe4\xff\x62\x3e\x83\xb9\x05\x69\x90\x0a\x14\x5a\x90\x08\x9b\x86\x5e\x76\x93\x8b\x93\x18\x4f\x92\xe8\x79\x80\x01\x56\x25\xee\x07\xf3\x55\x38\x39\x8e\xa4\xea\x47\xea\x2d\x2a\x39\x57\x8e\x04\x25\x5c\xaf\x38\xff\x6e\x5e\xdb\x77\x73\xdc\xe1\x69\xa2\x7d\x74\xc1\x7c\x89\x8c\x15\x87\xb6\x97\x9a\x34\xd4\x68\x56\xa8\x82\xb1\xb5\x2e\x3f\x64\x83\x59\x51\x66\x25\x16\x25\x32\x4c\xde\xcf\xd1\xed\xed\xf3\x6b\x2f\x1d\xff\x02\x00\x00\xff\xff\x7d\xab\x57\x72\x96\x05\x00\x00")

func assetsFullMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsFullMd,
		"assets/full.md",
	)
}

func assetsFullMd() (*asset, error) {
	bytes, err := assetsFullMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/full.md", size: 1430, mode: os.FileMode(420), modTime: time.Unix(1441249321, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsIndexMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4b\x8f\x1b\xc7\x11\xbe\xf3\x57\x14\xb4\x97\x25\x30\x1c\x2a\x02\x74\x11\x1c\x07\x4a\x9c\x87\x03\xcb\x32\x24\x25\x97\x40\xc0\x14\xbb\x6b\x38\xed\xed\xe9\x9e\x74\xf5\x90\xcb\x18\xfe\xef\x41\x75\xf7\x3c\x48\x6f\x36\x08\x22\x9f\x96\xdb\xaf\x7a\x7c\x5f\x7d\x55\x73\x07\xdf\x60\x44\x78\xe7\x35\x59\x86\x8f\x14\x4e\x46\xd1\x66\xf3\x77\x0a\x6c\xbc\x7b\x03\x3f\xfd\x54\x97\xdf\x3f\xff\xbc\xd9\xdc\xdd\xdd\xc1\x27\x3f\xec\x2c\x9d\xc8\xc2\x07\x62\x3f\x06\x45\xbc\xd9\xec\xf2\x0b\xf0\x71\x20\x65\x5a\xa3\x30\x1a\xef\x18\x76\xf0\x8f\x7d\x9f\x9e\xfe\x7c\x5f\x7e\x6c\x61\x07\x6f\x81\xd7\xe7\xc0\xb7\x40\xa8\x3a\xd0\xe2\x4a\x3a\x06\xa7\x6c\x14\x0c\x03\x9e\xd0\x58\x3c\x58\x02\x8c\x80\xd0\x94\x87\xf6\x5f\x2d\xc7\xbf\xde\x7f\x55\x2e\x7c\xdd\x00\x39\x3d\x78\xe3\x22\xdc\x53\x7d\xac\xab\xd9\x85\xbd\xef\xfd\xb0\x3f\xbd\xfe\x7c\xdf\xc5\x38\xbc\xd9\xef\xe5\xfe\x2e\xef\xed\x38\x47\x5e\x07\x62\xc2\xa0\xba\x5a\x75\x7e\xa8\x49\x8f\x37\x97\xb7\xdb\x5a\xa2\xfd\x40\x83\xcf\xe1\x05\xf9\xf5\xf9\x3e\xff\x95\xe0\x3e\x75\x86\x17\x1f\xb8\xf3\x67\x86\xd8\x11\xfc\xd9\x44\x48\x87\x4c\xf4\xe1\x02\x3e\x2c\xff\x19\x62\x38\x90\x71\x47\x10\x37\x48\xc3\xe1\x02\x51\x9e\x99\xbc\xca\x99\xff\xc6\xb4\x2d\x05\x72\x8a\x18\x7e\x4f\xf1\x4c\xe4\x0a\x70\x9b\x8d\xec\xc9\x23\x79\x35\x9e\xfd\x94\x41\x96\xec\x4e\x59\xf5\xe1\xea\x48\x20\x8b\x91\x74\xde\x64\x50\xe8\xe0\x40\x70\x32\x74\x26\x3d\x25\x5b\xf9\x7e\xc0\x40\xeb\x6c\xc3\x6f\x96\x7c\xa7\xdf\xab\xad\x57\xab\xad\x57\x4f\x82\x31\x3d\x98\x12\xfa\xba\x7e\x59\xbf\xdc\x0f\xa4\xd9\x51\xdc\xbf\xaa\x5f\xd5\x2f\xff\x47\x78\xfe\xdb\x73\x09\x30\xc9\xde\x1f\xbc\x8b\xe4\x22\x38\x3a\xfa\x68\x12\xf1\x36\x9b\x4f\x1d\x4d\x49\x06\x1e\x87\xc1\x87\xc8\x82\x8b\xd8\x71\x51\x10\x49\xc4\x0c\x85\xe9\x60\x1c\x9c\x30\x18\x3f\x32\xb4\x3e\xf4\x18\x19\x46\x4e\xc0\x99\x7e\xb0\x04\x6a\x6d\x24\xd9\xa8\x21\xd9\xc8\x6f\x93\x9e\xaf\x61\xa0\x37\xc2\xa4\xbf\x7c\x7a\xf7\x1d\xec\xa0\x89\xf4\x18\xf7\x5d\xec\x6d\x23\xc5\x84\xe1\x41\xfb\xb3\x9b\x37\xfa\xb2\x20\x9b\x7f\xfd\xf8\xfe\x7b\xd9\xc0\x61\xb0\xa5\x82\xf6\x3f\xb2\x77\x4d\x0e\x47\x13\x9b\x30\x1b\x9a\x40\x0d\xf4\xcf\x91\x58\x1c\x20\x13\x3b\x0a\x42\x31\xa6\x98\x42\x14\x76\x36\x6f\x95\xa2\x21\x36\xd0\x11\x6a\x0a\x10\x7d\x5a\x56\x3e\x04\xe2\xc1\x3b\x2d\x07\x7b\xd3\x53\xbc\x0c\x94\x78\x74\x01\xd4\x69\x15\xa1\xc9\xb6\x1a\x18\x30\x60\x4f\x71\xb9\xff\xb7\x0f\xdf\xd5\xf0\x27\x1f\x80\x1e\x51\x12\x54\xc1\x81\xac\x3f\x4b\x59\xcb\xf6\xfb\x77\xef\x7f\x80\xd3\xeb\x25\xbf\x73\xea\x49\x4b\xae\x53\xf2\xf3\xe3\xeb\x64\x5d\x57\x74\x02\xfd\x77\xf9\xd4\x6f\x25\x83\xff\x47\x81\xff\xe2\xad\xed\x35\x1a\xcf\x58\xee\xf5\x97\xb2\xdb\xeb\xed\x02\xf3\x33\x16\x05\xf4\x2f\x65\x53\xde\xda\x6e\x36\x1f\xa6\xfc\x17\x01\xc7\x40\x10\xd1\x58\x2f\x8c\x9a\x38\x61\x0d\xb9\x28\x00\x8a\x44\x04\x02\x7a\x1c\x48\xc5\x7c\x60\x64\x4a\x87\x26\x44\x2b\x40\x16\x4a\xaa\x60\x0e\x22\x6c\x82\x7e\x0d\xdf\xfb\x48\xf9\x3e\xfb\x7e\x39\xcc\xa0\x3d\x38\x1f\xa7\x72\x01\xb4\x76\x2a\x98\x5c\x47\x89\x00\x85\xd9\x85\x43\x9a\x5a\x1c\x6d\x9c\x56\x87\xe0\x4f\x46\x93\x86\x73\x47\x0e\x5c\x61\x7b\x4f\xb1\xf3\x5a\xa4\x50\xfd\x52\x06\x52\x10\x23\x93\x2e\x4a\xf1\x44\x2b\x5b\xf7\xba\x3b\x39\x23\x8e\xe4\x7a\x5b\xbb\x34\x89\x5c\xe1\xf5\x17\x25\xe2\x56\x02\x36\xe2\xbc\x44\x87\x0c\x28\x12\x7f\x99\x94\x67\x08\xde\xb7\x25\x40\xa9\x64\x71\x09\xb4\xe1\xc1\xe2\x65\x2a\xf2\x95\x4e\x5f\x37\x60\xe3\x00\xe1\x4c\x87\x82\x6d\xba\x1b\x48\x1a\x81\xd4\xf9\xea\x1a\x3a\xbd\x97\x77\x65\x65\x64\x0a\x5c\xc3\x5b\x06\x1e\x55\x57\x81\x89\x70\xa0\xa3\x71\x0c\x67\x13\xbb\x5b\x83\x73\x43\xd7\xf2\x08\x20\x04\x2a\xcd\x4c\x44\xa2\x82\xd6\x5b\xeb\xcf\xb9\xf7\x21\x58\xc3\x51\x82\x89\xd2\xf7\x19\xee\xcf\x9d\x51\x5d\xee\x8e\x9c\x63\xb7\xc6\x3d\x08\xe5\xd2\x60\xb0\xe0\xca\xdb\x1a\xfe\x28\xaa\x91\x37\x98\x54\x09\x50\xd9\x51\x53\x66\x4c\xde\xca\xa4\x1c\x32\x01\x92\x47\x93\xd1\xd6\x90\xd5\x0c\xf7\x78\x44\xe3\xaa\xe7\x6d\x25\x6d\x4b\x2a\x25\x97\x2a\x78\x91\xc2\x62\x88\xfe\x05\x18\x97\xf1\x33\xde\x55\x60\x5a\x49\x10\x3d\x1a\x8e\x5c\x09\x94\xeb\x80\x33\x8f\x6f\xfc\x71\x17\x60\xd5\x51\x8f\xd7\x60\x49\xca\x17\x57\x7a\x1c\x06\xe3\x8e\x5c\x42\x98\xd7\x8d\x3b\xf8\xd1\xe9\x25\xcb\xb9\x96\xd1\xb2\x9f\x4b\x24\x39\x95\xaa\x70\xe5\x69\x76\x6d\x74\xba\xce\x93\xcc\x54\x2f\xb3\x32\x8b\x29\xc0\xe3\x31\xd0\x71\x9e\xde\xd6\xf7\xf1\xe0\xc7\x78\x8b\x7e\xc6\xef\x2c\x45\x6f\xdc\x03\x9c\xfd\x68\x45\x0c\x84\x43\xed\x68\x33\x57\x9f\x63\x59\xa9\xba\x49\x89\x73\xe5\xcd\xba\xfc\xeb\x56\x5f\xaf\xb7\xdb\x29\x67\x99\x40\x8c\x3d\x5d\xc7\x9c\xd7\x57\x52\x50\xc3\xb7\x0e\x5a\x54\xb1\xba\xdd\x91\x04\x6b\x0a\x46\xe6\x3c\x6d\x02\xa9\x68\x2f\xd0\x06\xdf\xa7\x83\x53\x4c\x65\x6c\x28\xc0\x83\xea\xbc\x49\x18\xa6\xe4\x96\x1e\x9d\xa6\xf0\x8c\xbc\x0f\x47\x74\xe6\x5f\xd9\x9b\xd2\xf2\x59\xc6\x3c\xcc\x50\xa0\x8a\x23\xda\x79\x1a\xe3\x89\xd2\x78\xf0\x27\x2a\x48\xdf\xca\x8b\x83\xb7\x3f\x7c\x2b\xe8\x72\x9a\x8a\x92\x8b\x19\xc7\x91\x69\xa7\x90\x69\xb7\xf8\x57\x7a\x82\x98\x0e\x14\x83\xa1\x13\x55\x92\x34\x45\xcc\x55\x72\xb1\x68\xd1\x4c\x1d\x09\xff\x3f\xeb\xd1\x6d\x6e\x2f\x70\x36\xdc\x4d\x3c\x90\xde\x98\x39\x90\xba\xe4\xaf\x8b\x7f\x6a\x8d\xdb\x0a\x46\x67\xcd\x43\xee\x6e\x83\x88\xa3\x1f\xd9\x5e\x56\xbd\xad\x34\xaa\xea\x2a\x91\xc2\xec\x48\xaa\x73\x46\xa1\x85\x24\xd5\xfd\xd4\x5e\xe7\xac\x49\x7a\xa4\x4d\x51\xeb\x43\x7a\xbc\xd4\x19\x04\x42\x6d\xec\x05\x7a\x54\x9d\x71\xb4\x2b\x09\xcd\x1f\x43\x4e\x03\x3d\x76\x38\x72\x34\xa7\xd5\xe4\x34\x17\xe5\x73\x8a\x9f\xe9\x15\xe7\x4f\x39\x7f\xf8\x91\x54\x4c\xc5\x8e\xa2\xe0\x37\x77\x1b\x87\x3d\x35\x15\x34\x45\xc5\x9b\x0c\xe9\x22\xe1\xcd\x18\x6c\x23\x50\x9d\xc9\xda\xc2\x1e\x0c\x01\x2f\xe2\x48\x93\x55\xbc\x29\xca\x5c\x6c\x19\x97\x07\xcf\xb2\x59\x8e\x5f\x79\x90\xd5\x2c\x1b\x4f\x06\x9b\x95\x48\x26\x1f\x56\x46\xb2\x6a\x17\xcf\xd2\xcb\xc9\xf7\x06\xe4\x7a\x5a\x2c\xb1\x2c\x31\xc8\xbc\xe2\xb0\x3f\x98\xe3\x98\xc1\x34\x5a\xa6\xfe\x36\x0b\x72\x3e\x1e\x7d\x21\xfd\xe2\x90\x0c\x31\xee\xc8\x4f\x87\x53\xdc\x78\x2a\x9c\xb4\xb5\xe4\xf2\x3a\x96\x46\x06\xeb\xe2\x7d\x23\xd3\xba\x0c\xf1\x0d\x70\xc4\x38\x32\xdc\x1f\xfd\x89\x82\x43\xa7\x28\x23\xb6\xad\xd6\xd9\x4e\x96\xcb\x20\xd4\x4c\xdd\xb2\xfc\x2f\xbd\x08\x9a\x17\x2f\x9a\x6d\x05\x8d\x25\x77\x8c\x9d\x98\x1b\x02\x29\xb3\xc2\xb2\x61\x85\x96\xe6\xcb\x32\x79\x4d\x93\x95\xdc\x7f\xd9\x4c\x8d\x35\x47\x51\xa2\x4e\xfd\xe4\x2a\xc8\x8c\x67\xce\x7a\x11\x96\x52\x9e\xdc\xdd\xa8\xbe\x71\xa0\x2f\x0e\x7b\x29\x0d\x7b\x01\x15\x08\xd3\xf7\x88\xd8\xce\x9a\xe3\xdb\x35\x0b\xfd\x40\x21\xb7\xc0\x2a\xab\x51\x69\x8f\xf9\xa2\x77\xe2\x28\x3a\x57\x3e\xbc\xd2\xb8\x1a\xd0\xf1\x2c\x25\x5c\x6f\xfe\x1d\x00\x00\xff\xff\x1b\x10\xcb\x2b\xef\x10\x00\x00")

func assetsIndexMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexMd,
		"assets/index.md",
	)
}

func assetsIndexMd() (*asset, error) {
	bytes, err := assetsIndexMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.md", size: 4335, mode: os.FileMode(420), modTime: time.Unix(1478800664, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsModelsMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\xd6\x0b\xc9\x2c\xc9\x49\xad\xad\xe5\xe2\xaa\xae\x2e\x4a\xcc\x4b\x4f\x55\xd0\xf3\x2c\x49\xcd\x2d\xae\xad\xd5\x55\x88\xae\xae\xd6\xab\xad\x8d\xd5\xd0\xcf\xcd\x4f\x49\xcd\x29\xd6\xaf\xae\xd6\x0b\x0d\xf2\x09\x48\x2c\xc9\xa8\xad\xd5\xac\xae\xce\x4c\x53\xd0\x73\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xab\xad\x55\xd0\x05\x19\x88\x22\x54\x5d\x9d\x9a\x97\x52\x5b\xcb\x05\xa3\x01\x01\x00\x00\xff\xff\x6c\x44\x2e\xae\x73\x00\x00\x00")

func assetsModelsMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsModelsMd,
		"assets/models.md",
	)
}

func assetsModelsMd() (*asset, error) {
	bytes, err := assetsModelsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/models.md", size: 115, mode: os.FileMode(420), modTime: time.Unix(1441249321, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsReposMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\x4a\x2d\xc8\x2f\xce\x2c\xc9\x2f\xca\x4c\x2d\xe6\xe2\xaa\xae\x2e\x4a\xcc\x4b\x4f\x55\xd0\xab\xad\xd5\x55\xa8\xae\xd6\x0b\x0d\xf2\xa9\xad\xe5\x52\x50\x50\x50\xd0\x55\x70\x2a\x4a\xcc\x4b\xce\xb0\x02\x09\x43\x98\x70\x19\xe7\xfc\xdc\xdc\xcc\x12\xb0\x0c\x84\x19\xec\xe1\x68\x88\x26\xab\xe0\x92\x58\x92\x8a\xa4\x24\x24\x33\x37\x55\xcf\x27\x3f\x39\x31\x07\xae\xd0\x2d\xb5\x24\x39\x23\x35\x05\xac\x08\xcc\x46\x51\x53\x5d\x9d\x9a\x97\x52\x5b\xcb\x05\x08\x00\x00\xff\xff\x04\x14\x1d\xe3\xb3\x00\x00\x00")

func assetsReposMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsReposMd,
		"assets/repos.md",
	)
}

func assetsReposMd() (*asset, error) {
	bytes, err := assetsReposMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repos.md", size: 179, mode: os.FileMode(420), modTime: time.Unix(1441249321, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsStyleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x3a\x5f\x8f\xe3\xb6\xf1\xef\xfe\x14\xfc\x79\x11\xe4\xee\x62\x39\x92\x65\x79\x77\xb5\xf8\x1d\x50\x04\x05\x5a\xa0\xe9\x4b\xd0\xa7\xcb\x3d\x50\x22\x65\x31\xa6\x44\x85\xa2\x6f\xbd\x57\xdc\x77\x2f\x28\x52\x7f\x28\x92\xb2\x9d\x16\x7d\x28\x7c\xb7\xbb\xa6\x66\x86\xc3\xf9\x3f\x43\x65\x0c\xbd\x6d\x40\x03\xfe\xb9\x02\x20\xa8\xda\x40\xe0\x8b\x08\x5a\xf2\x15\x07\x10\xfd\x76\x6e\x45\x0a\xa2\x30\xfc\xee\x45\x3e\x7d\xc5\xd9\x89\x88\x05\x88\x9c\x51\xc6\x53\xf0\x10\xc7\xb1\xfc\x5a\xb0\x5a\x04\x05\xac\x08\x7d\x4b\xc1\xfa\x2f\x98\x7e\xc1\x82\xe4\x10\xfc\x1d\x9f\xf1\x7a\x03\x86\x85\x0d\x58\xff\x82\x8f\x0c\x83\x7f\xfc\x75\xbd\x01\x7f\xe2\x04\xd2\x0d\x28\x38\xc6\x2d\xac\xdb\x0d\x90\x3f\x83\x16\x73\x52\x0c\x44\xe5\xee\x29\x88\x0e\xcd\x45\x2e\x51\x52\xe3\xa0\xc4\xe4\x58\x4a\x5e\xb6\x87\x97\xd5\xb7\xd5\x4a\x9e\xab\x3b\x14\x00\x15\xe4\x47\x52\x07\x82\x35\x29\x38\x84\x12\xe7\xdb\x6a\xf5\xd0\xe6\x9c\x51\x1a\xc0\x3a\x2f\x19\xd7\x90\x88\xb4\x0d\x85\x6f\x29\xa8\x59\x8d\x5f\x56\xdd\x5a\xc3\x5a\x22\x08\xab\x53\x50\x90\x0b\x46\x2f\xdd\x22\x57\x9b\xed\x42\xc5\x01\x00\x1d\xf1\xf1\xeb\xd7\x80\xd4\x08\x5f\x52\x10\xf5\x54\x20\x42\xa4\x3e\x4a\x59\xf5\x30\x19\xcc\x4f\x47\xce\xce\x35\x0a\xb4\xe0\xf8\x31\x83\xef\xc2\x0d\xd0\xff\xb6\xd1\x7b\x8d\xdd\x0b\x36\x49\x12\xbd\x9d\xd4\x01\xc2\x39\xe3\x50\xf1\xa6\x18\x96\xe7\x2a\x31\x44\xb8\x3f\xd0\xc8\x3c\xcc\x5a\x46\xcf\x02\x4f\xd8\x0d\xd5\xdf\x14\x17\x62\xf8\xa2\x0f\x16\xce\x8e\xb1\xd3\x8c\xd8\x3c\x3f\xe0\x67\xf9\xd1\x47\x62\x1c\x61\x1e\x64\x4c\x08\x56\xa5\x20\x6a\x2e\xa0\x65\x94\x20\xf0\x90\xe7\x79\x0f\x72\x09\xda\x12\x22\xf6\x9a\x82\x10\xec\x9a\x0b\xd8\x37\x17\xff\xc9\x95\xb1\x0d\xf0\x92\xa2\xfc\xff\x50\x14\x85\x71\xdc\x6d\xc6\x61\x8d\xf4\xa9\x67\x76\xa8\x8d\xe6\x55\x5b\x48\x12\xea\xd3\x15\x94\x41\x91\x76\xe7\x37\x68\x9d\xa9\x61\x38\x83\x34\x06\x1d\xea\xef\x83\xb5\x90\xba\x33\xc1\x8c\xb2\xfc\x74\x95\x34\x25\x73\x63\xb3\xd1\x67\x1b\xfb\xa8\x6d\x9b\x33\xa5\x41\xa7\x32\x00\x35\x55\xad\x02\x53\x8f\x7a\x51\x69\x7a\xae\x95\x09\xc1\x9e\x88\xc7\xbc\x3c\x86\xbc\x70\x10\x93\x1b\x97\x3d\x18\xa6\x3d\x65\x25\x2d\xd9\x17\xcc\x37\x60\x22\x3a\x98\xc2\x5c\x90\x2f\xb8\x3f\xaa\xc3\x18\x63\xf9\x79\xb1\xad\xe0\xdb\x6a\xb5\xad\x20\x3f\x21\xf6\x5a\x07\x43\x6c\x90\x3b\x14\x54\x9a\x56\x49\x10\xc2\xb5\x44\x7c\x65\x1c\x05\xaf\x1c\x36\x29\xc8\x38\x86\xa7\x40\x2e\xb8\x08\x28\x61\x8d\x4c\xa4\x40\x70\x58\xb7\x0d\xe4\xb8\x16\x4e\x04\xcd\xfe\xc6\x7e\xd0\x9d\x55\xb1\x74\x16\x52\x88\x9d\xea\x6c\x12\xad\xe0\xac\x3e\x76\x80\x86\x4d\x67\x8c\x3a\x79\x2c\xa3\x11\x56\x05\xcd\x1d\xae\xe4\x29\x07\x0b\xdb\x1e\x1e\x71\xe5\xde\x8c\x54\x6a\x27\xa5\x44\x0f\x47\x25\xd7\x30\x17\xb9\x41\x67\x19\x39\xab\x05\xae\x45\x90\xb1\xce\x40\xfa\xc8\xec\x44\x6f\x38\x9e\x69\x02\x9e\x05\x73\x41\xe6\x0c\xd9\x92\x3b\x65\xc8\x5a\xeb\x49\x1a\xe9\xa7\x62\x35\x6b\x1b\x98\xe3\xcd\xf8\xe7\x3c\x9d\x48\xc9\x38\xa4\x50\x37\x67\xd1\x11\xd4\x06\x45\xea\x12\x73\x22\x7a\x6c\x63\x61\xe2\xb8\x0e\x51\x89\x8a\x2a\x72\x9f\x10\x69\x61\x46\x31\xfa\xac\x08\x9f\x79\x2b\x29\x23\x5c\xc0\x33\x75\xda\xce\xc8\x85\x91\xed\x6a\xc6\x2b\x48\xbd\x08\x9f\xc4\x5b\x83\xff\x7f\x9d\x97\x38\x3f\x65\xec\xb2\xfe\x6c\xe9\x6a\x88\xd8\x9d\xaa\xa6\x11\xce\x26\x29\x24\xcb\x13\x8b\x90\x5e\x47\x61\xd3\x62\xa9\x72\xf5\xd7\xcb\xf8\x50\x8a\x78\x81\x96\xad\x37\x51\x76\xb4\x97\x79\xf8\xb0\x78\x82\x25\xb9\x29\x5d\x45\x71\x73\xf9\x31\xda\xee\xa7\xd5\x07\x54\x15\x47\x4d\xaa\xec\xdc\xca\x6a\x83\x6e\x00\x25\x19\x56\xc1\x4f\x15\x21\x63\x39\x92\x53\x0c\xeb\x69\x55\x32\x29\x5f\xc0\x9f\x2b\xf6\x1b\x59\x4f\x57\x7e\x79\xab\x32\x46\xd7\xfe\x00\xd2\x87\xa9\x7d\xf4\x14\xe7\x7b\x29\x40\x7f\x72\x77\xc7\x0d\x47\x3c\x99\xc4\x49\x8b\xda\xb9\x46\x98\x4b\x2b\x5a\x70\xe7\x89\xcf\x8e\x46\x1d\x25\xcd\x45\xad\xb8\xe2\xa6\x37\x10\x1a\x01\x64\xa9\x46\x40\xc8\x1d\xc3\x78\x9a\xe1\x82\x69\xaf\x1e\x92\x4d\x67\x8d\xaa\xea\xec\xc2\x4d\x0a\xd6\x4e\x29\x97\x3c\x85\x85\xd0\xd1\xd5\x81\x4d\x31\xe4\xd2\x8a\x44\x79\x0b\xb1\xc8\x12\x76\xb9\xb3\x97\x62\x7b\x69\x6f\x2f\x25\xf6\xd2\xa1\xe3\x72\x5a\xb0\x4a\xa1\x8f\x4a\x18\xc5\x96\x38\x6b\xdf\xe8\xb6\x24\x10\xf7\x55\xb0\x75\x16\x2b\x5d\x44\x1e\xc8\x78\x0e\xa9\xaa\x71\x07\xe4\xde\x82\xdc\x7b\x20\x13\x0b\x72\xe7\x81\x3c\x58\x90\x1e\x3e\xbb\x5a\xe4\xf7\x33\x13\x78\x22\x59\x4f\x6c\x39\x53\x4b\x21\x8c\x5a\x31\xc9\x54\x4f\xe8\xd0\x8d\x93\x38\xa3\x80\xd9\xf4\xcf\xb4\xdf\x82\x92\x56\x04\xad\x78\xa3\x38\x90\x41\x3b\x05\x94\xbd\xca\xca\x89\x55\xb0\x76\x33\xab\x90\x3d\x24\x1d\x0f\x98\x0f\x83\x69\x8c\x25\x3e\x20\x6d\x4a\xe8\xe2\x03\xa1\xa9\xc9\x0e\xbd\x84\x3b\x7f\xdb\x79\xf9\x27\x56\xb7\x8c\xc2\x76\x03\xd6\x7f\x1b\x42\x2e\xf8\x99\xd5\x6c\xbd\x01\x3f\xe3\x9a\xb2\x0d\xf8\x89\x9d\x39\x91\xa5\xa0\x37\x73\x7b\xcc\xa4\xaf\x04\x6e\x50\xd8\x90\x1f\x64\x47\xf2\x47\x99\xb2\x39\xd8\xb2\x5c\x90\x9c\xd5\x93\x0c\xa4\x52\xf6\xec\x97\x74\x9e\x1f\x23\xa0\xa1\x5b\xdd\x95\xbe\xac\x16\x8a\x6b\x6f\x8d\xde\x3d\xe0\x58\x46\xf9\xce\x66\x55\x41\x35\xf6\xef\x4a\x70\x15\x63\xa2\x54\xcf\x6b\x41\x20\x25\xb0\x55\xcd\x6d\x50\xb1\xaf\x01\x6b\x2f\x16\xdc\x91\xc3\xb7\x36\x87\x2a\x6c\xf6\xc4\xce\xad\x4c\xf5\x98\xe2\x5c\x8c\x1c\x74\x24\x3c\x4f\x5a\xf7\x03\xc7\xa2\x5f\x9a\x01\x25\xf5\x69\x9a\x14\x86\xa8\xfd\xfd\xaf\x45\x98\xe4\xdf\x3b\x90\x3f\x7e\x48\x0b\xc2\x5b\x11\xe4\x25\xa1\xc8\x36\x0b\xf0\x7f\xa4\x6a\x18\x17\xd0\x59\xbb\x7f\xfc\x90\x52\xe8\x42\x1e\x4c\x68\x19\x1f\xc0\xb4\x66\xe2\xdd\xa7\x92\xe3\xe2\xf3\x7b\x4f\x35\x79\x73\xde\xdf\x4e\x86\x16\xee\x0e\x7f\x34\xf5\x49\x77\x3f\x98\xd2\x60\x43\x3a\xae\xf5\xfd\x99\x9e\xa7\xf4\xab\x0a\x35\x0e\x8d\x04\xa4\x16\x03\x5f\x06\xd1\xac\xa5\x05\xcb\xcf\xad\xd9\xd0\xf8\x4e\xf3\xdf\xc9\xa9\xa3\x9c\x38\xa6\x50\x56\x47\xf3\x50\x1e\x4d\x3b\xa3\x31\xd1\x6a\xa1\x38\xda\x2d\x2b\xfb\xee\x3d\xd9\xd7\xb0\x5b\xc7\x61\xaf\x01\xc4\xd7\x00\xf6\xd7\x00\x92\x6b\x00\x07\x13\xc0\x2c\x96\x7a\x27\xed\x4b\xd5\x50\x4d\x50\xbe\x60\x2e\x0b\x68\x1a\x40\x4a\x8e\x75\x0a\x2a\x82\x10\xf5\xa8\x58\x77\xb8\xda\x3c\x1c\x32\xb8\x06\x10\x5f\x03\xd8\x5f\x03\x48\xae\x01\x1c\x4c\x80\x69\xe6\xd7\x66\xff\xe4\x77\x85\x3b\xdc\x77\x2e\x8d\xab\xf6\x71\x1f\x78\x7c\x1f\xf8\xfe\x3e\xf0\xe4\x3e\xf0\xb9\x4c\x17\xac\xcc\x4c\x70\xde\x32\xb6\xd7\xc8\x10\x79\xb7\xb1\x72\xdc\x69\xd5\xba\xdd\x25\x6a\x71\xe6\xa1\xbb\xe5\x0e\x04\x63\x8f\xc2\x0c\x9b\x30\x69\x2e\xd4\xd1\xb7\xb0\x1a\x6d\x1f\x3d\xac\xee\x92\x3f\xc6\xec\xee\x5e\x66\xed\x52\x7e\xeb\x66\x69\xef\x1c\xa4\xc9\xf0\xe4\xdd\x50\x4a\xfc\xa6\x9e\x40\x6b\xcc\x09\x7b\x37\x79\xbb\x91\xf0\xd0\x4e\x96\x68\xbb\xa5\x65\xb7\x1e\x4a\x56\x7d\x70\x7c\x7c\x7c\xf4\xe0\xdd\xbb\x55\x63\xb9\xd3\xd8\xcd\x38\xca\x7e\x47\x5d\x6f\x2d\x21\x7b\xa9\xeb\x84\xbd\x43\xb4\x6b\xa5\xb3\xb7\xeb\x33\xe7\x08\xfb\xc6\x9a\x2f\x4d\xe6\x0a\x87\x7e\xae\xe0\x9a\xe8\x3e\xca\x8f\x31\x45\xf0\x06\xd6\xab\x0d\x9c\x0e\xd9\x3b\xb7\x35\x74\x2d\x95\xbb\x9f\x72\xf7\x4c\x9e\x16\xeb\xc6\x96\xc3\x66\x80\x92\x8f\x8d\x3d\x00\xf0\x48\x18\xd9\xad\xa9\x13\x08\x89\x2b\x2d\xac\x51\xe1\x18\x26\xad\x56\x64\x2f\x98\x02\x22\x20\x25\xb9\xa7\x12\x72\x6f\x8c\x66\x1b\x0f\x3b\xdd\x68\x43\xb3\xde\x7d\x4a\x48\x4f\x3f\x0c\x9f\x9b\x5d\x73\xec\xaf\x0e\x96\x46\xfa\x1f\x97\x7b\x83\x6b\xc8\x57\x5a\x83\xe5\x59\xaa\x5d\x95\xbf\x12\x24\xca\xf1\x56\x75\x3e\x1a\xd7\x57\x14\xdd\xe5\xc4\x38\x01\x36\x57\x4f\x18\x37\x01\xa4\xce\xc9\xb0\xda\x5a\x4f\x5b\x6f\x52\x66\x8f\xe1\x8e\x1d\x40\xcc\x14\x2d\xdd\x39\x8a\x95\x86\x7a\xa7\xbd\x3e\xe6\xd3\xb4\xf8\xec\x56\x65\x08\x04\xdd\x8d\xdf\xa0\x63\x65\xb9\xf6\x4d\x96\x87\x68\x5a\x8b\x52\x69\xe8\xdd\xae\x7e\xef\xdd\xe2\x49\x7e\x96\xae\x42\x2a\x78\x09\x66\xea\xb9\x7d\x16\x3d\x4c\x40\x4c\x5f\xec\x63\x93\xb2\xb5\xad\xbe\xa0\xb1\x6b\x87\xf9\xcd\xcd\xcc\x67\x9f\x92\xef\xdc\x21\x54\xdf\xad\x76\x9f\x6d\xb8\x7f\x3f\x91\x22\x87\x88\x9c\xdb\x14\xc4\x6e\x07\x94\x0c\xeb\x36\xdb\x52\x7d\xf7\x6c\x1c\xac\x52\x2c\xc4\x74\xe8\x1f\x0c\xfc\x8e\x13\xd5\x5f\xc3\x10\x86\xce\xb1\x6a\xc3\xf1\x47\x8f\x74\x7c\xc7\xed\xc5\xef\xf1\x85\x92\x08\xdc\x71\x83\x53\x49\xfd\xf6\x01\xb5\xa3\xa5\x2d\xc9\xb1\xa4\xdd\x25\xab\xc3\xbb\x7d\xc1\x6b\x82\xd5\x38\xc4\xd7\xe7\xd7\xf1\x3a\x55\xc7\x46\xdb\xdb\x6d\x1d\xcf\xcb\xb2\xc4\x93\x3b\x8b\x47\xf9\xb9\x5d\xdf\x26\xcf\x9e\x58\xe6\x16\xb9\x7f\xf8\x36\xb9\x4f\x5d\x06\x1e\x0c\x60\xd6\x11\xbc\x98\x7e\x47\x6a\x22\x88\xd2\xf2\x82\xa5\x8c\x62\x9c\xc0\x1b\x72\x9b\x0c\x5e\x1c\x2c\xba\xe4\x79\x8f\xd1\xf4\x07\xf2\xb9\xcf\xf0\x7c\x74\xa1\xc1\x51\xfc\x62\x3a\x65\x68\xa9\x67\x9a\x48\x24\x6e\x2e\x20\xb1\xf3\x7a\xe4\xba\x35\x08\xcd\x64\xaa\x5f\x32\xf1\x75\xf7\x6e\x4b\xcb\xe5\x67\x2a\x15\x15\x97\xbb\x77\x35\xf4\x5d\xbf\xd1\xc9\x0c\x98\x59\x96\xf9\x0c\xd4\x7c\x59\x84\xd4\x2d\x16\x20\x04\x81\xa4\x19\x6a\x44\x87\x0d\x37\x34\xc8\x8d\x8b\xb5\xe7\xc3\xf3\xd3\xf3\xc1\x0b\x6b\x4f\x9f\xe4\x72\xdb\xfd\xfc\x62\x10\x0a\xc3\xa7\x43\xe6\x6c\x81\x24\xac\xad\xe3\x6e\xb5\x36\x48\x3c\x3e\x27\x08\x7a\x49\xa8\x4d\x5b\x0f\x47\x15\x31\x48\x79\x5e\x6b\x50\x9b\x1a\x17\xd6\x0f\x87\x18\xc6\x89\x33\x3f\x4a\xe8\x93\x01\x0b\x1f\x23\x94\x38\x13\xb4\x84\x6d\x50\xeb\x66\x6e\x41\x88\x4d\x8b\x17\xcf\x65\x4f\x62\xd4\xb2\x52\x4f\xee\x96\xab\x7e\xdc\x72\xb8\xfc\x18\x1b\x87\x8b\x9e\xe2\xc3\xb3\xb3\xd7\xb2\xb5\x8d\xd1\x01\xba\x1b\x5e\x09\x4b\x90\x01\x9c\x25\x3b\x18\x79\xa5\x46\x88\xaf\xe2\xe8\xf1\x46\x4a\xfe\x1a\xc4\x94\x8a\x53\xc1\x37\xd6\x73\x92\x44\x45\x4d\x0a\xcf\x31\x8c\x9c\x8d\x6b\x07\x6c\x97\x7e\x6a\x59\x9b\x9b\xfb\x69\x6b\xca\x1e\xc5\xf8\x29\xba\x8f\xc7\xdf\xe7\xfe\x17\x3e\xb9\x53\xb4\x04\x76\xb8\x87\xbb\x85\xf1\xe0\x67\x5e\xfc\x9b\x78\x45\xfe\xc2\x15\xe7\x38\x9f\xea\x38\x43\xbb\x3c\x5c\x38\x48\xe4\x23\x85\x61\x51\x60\x68\x06\x6b\x98\xc4\xce\x21\x88\x62\x8a\x3b\xc3\xcf\x3d\xe7\x62\x4e\x2d\xfe\x07\x73\x93\x4a\x4b\xff\xc6\x4d\xe0\xff\x72\x36\x13\xb0\x3d\x05\xdd\x9d\x2c\x11\xb8\x72\xdf\xd0\x7a\xaf\x89\x4c\xe4\x1f\x5c\xc4\xa6\x7d\xae\xaf\x2a\x9c\xa1\x8d\xaf\xd4\x0c\x15\x17\x08\xb7\x71\x82\x2b\xd9\xa4\xc8\x5f\x41\xb4\x3d\xa8\xe2\xff\xf6\x2b\x82\xb4\x7b\x49\x09\xa3\x1f\xb6\x52\x6a\x2c\xa0\x30\xc3\x2a\x44\x4d\xdf\xa5\xf5\xdd\xe3\x8c\x2f\x24\x19\xef\xd2\x7c\x5b\xfd\x2b\x00\x00\xff\xff\xec\x00\xc6\x29\xdf\x2c\x00\x00")

func assetsStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsStyleCss,
		"assets/style.css",
	)
}

func assetsStyleCss() (*asset, error) {
	bytes, err := assetsStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/style.css", size: 11487, mode: os.FileMode(420), modTime: time.Unix(1441249321, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsWrapHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x8f\xdb\x36\x13\xbe\xfb\x57\x4c\xf6\x05\x42\xe9\x85\x2c\xed\x1e\x02\x14\xb5\xe8\x22\xe9\x06\x45\x81\x36\x01\x9a\xbd\x14\x8b\x3d\xcc\x92\x23\x99\x09\x45\x2a\x24\x65\xc7\xf0\xfa\xbf\x17\x94\xac\xc8\xf6\x7a\x53\x94\x07\x53\xe2\x7c\x3e\xcf\xcc\xd0\x2a\x5f\x49\x2b\xc2\xb6\x25\x58\x85\x46\x2f\x67\xe5\x8a\x50\x2e\x67\x00\x00\x65\x43\x01\x41\xac\xd0\x79\x0a\xfc\xaa\x0b\xd5\xfc\xa7\xab\x63\xd1\x2a\x84\x76\x4e\x5f\x3b\xb5\xe6\x57\xdf\xe6\x1d\xce\x85\x6d\x5a\x0c\xea\x51\xd3\x15\x08\x6b\x02\x99\xc0\xaf\x14\x71\x92\x35\x8d\x96\x41\x05\x4d\xcb\x5b\x0c\x08\x7f\x5a\x49\xda\xc3\x27\x72\x6b\x25\xa8\x2c\x06\xd1\x51\x00\x83\x0d\xf1\xab\xb5\xa2\x4d\x6b\x5d\x38\xf2\xb9\x51\x32\xac\xb8\xa4\x68\x37\xef\x5f\x32\x50\x46\x05\x85\x7a\xee\x05\x6a\xe2\x37\x63\x3c\x1f\xb6\x9a\x96\xbb\x5d\xfe\x29\x3e\xec\xf7\x65\x31\x9c\xcc\xca\x62\x80\x5a\x3e\x5a\xb9\x3d\x28\x4b\xb5\x06\x25\x39\x8b\x12\x72\x6c\x38\xed\x25\x08\x42\xa3\xf7\x9c\x3d\x3a\x34\x92\xc1\xca\x51\xc5\x59\xc1\x8e\x91\x94\x05\x2e\x67\x93\x49\xa7\x27\xfb\xfe\x40\xab\x65\x89\xa3\x65\xd3\x9b\xb0\xe5\x64\x5a\x16\x5a\xfd\xc8\xc2\x51\x6b\x3d\x5b\xfe\x15\xb7\xe7\xfa\x65\x31\xc6\x2b\x0b\xa9\xd6\x87\x44\x4a\xec\xf1\x78\xe1\xac\xd6\x73\x34\x62\x65\xdd\x98\xfc\xff\xd8\xf2\xce\xb6\x43\xd2\x13\xfc\x03\xcc\x06\xdd\x17\x69\x37\x66\x1e\xd9\x39\x22\x62\xb7\xcb\x7f\x1d\xaa\xb0\xdf\x3f\x8f\xe6\x85\x53\x6d\x98\xb4\x93\xaa\x33\x22\x28\x6b\x92\x14\x76\xb3\x13\x6c\x45\x01\xb7\xf4\x68\x3b\x23\x08\xe8\x1b\x89\x2e\x90\x07\x6b\xf4\x16\xc2\x8a\x40\xa3\x0f\x20\x50\x6b\xb0\x15\x20\x8c\x6e\x00\xab\x40\x2e\x6a\x9c\xfb\xf2\x2d\x09\x55\x29\x92\xb0\x41\x15\xa0\x25\xa7\xac\xcc\x4f\xb4\xbe\x3b\x91\x87\xb8\x7d\x76\x59\x6f\x90\x81\x6a\x1a\x92\x0a\x03\xc5\x4c\xe1\x6c\xad\xd1\x41\x50\x0d\xd9\x2e\x2c\x66\xcf\xa4\x8e\x42\xe7\x0c\x9c\x60\x3d\xd7\x19\xbd\xf4\x2d\xfc\x2d\x00\x87\xb0\x52\x3e\xbb\xa8\x17\x17\xba\xda\x03\x8f\x5b\xd7\x90\x09\xfe\x42\xd8\xd1\xa5\xc6\xc8\x09\xff\xf7\xf8\x71\x1d\x50\x00\x07\xd3\x69\xbd\x78\x51\x4f\x55\x90\xbc\x3a\xe2\x24\x3a\xcf\xb1\x6d\xf5\x36\x39\x40\xc8\xfa\x1c\xd3\xcb\x2e\xf6\x3f\xc8\x37\x96\xf5\x83\xdd\x00\x9f\x38\x87\xd7\xaf\xe1\xd5\xcb\x04\xc7\x25\x34\xa1\xbb\x1b\x54\x92\x83\xea\x0b\xc1\x27\x8c\x9e\xc2\x68\xd2\xb3\x34\x14\x3b\x7d\x21\x44\xc4\x7c\x48\xee\x3f\x01\xde\x9f\x1e\x9d\x63\x8f\x98\x87\x01\x7c\xdb\xcf\x1f\x70\x90\x56\xf4\x65\xcd\x6b\x0a\xef\x35\xc5\xc7\x77\xdb\xdf\x65\x72\x36\xa8\xe7\x89\x16\x05\x7c\xea\x15\x20\x58\x08\xb6\x3d\xed\xef\xe3\x18\x39\x4a\xf9\x7e\x4d\x26\xfc\xa1\x7c\x20\x43\x2e\x61\x42\x2b\xf1\x85\x65\x53\x9b\x50\x94\x5f\xea\x95\x5e\x90\xb7\xae\xdf\x6f\xa9\xc2\x4e\x87\xe4\x02\xee\x21\x60\x72\x9d\xc1\xf5\x99\x74\x9f\x41\x85\xda\xd3\x05\x00\x77\xb6\xae\x35\x1d\x6c\x61\x00\x7a\x8a\x63\xa3\x8c\xb4\x9b\x0b\x08\x06\x1b\x96\x9d\x0e\xf0\x8f\xb1\xf4\x93\x6b\x5b\xe0\x90\x1c\xfc\xb6\x58\xd3\xdf\x1f\xab\xca\x53\x80\xa7\xa7\xa9\x14\x83\xf7\x3b\xdb\xa6\x30\x87\xe4\xfb\xb1\xd0\x8a\x4c\xb8\xb3\x6d\x54\xbe\xbe\xd4\x3a\x27\xbc\xf7\x7f\x2e\xb9\x54\xbe\xd5\xb8\x8d\x53\x6e\x5b\x58\xc2\x9b\x6b\xf8\x05\xd8\xa3\xb6\xe2\x0b\x83\x9f\x81\x19\x6b\x88\x3d\xa3\xec\xe6\x4d\x7a\x81\xb7\x7d\x3a\x72\x5f\x16\xe3\xfd\xda\xbf\xee\x76\xaa\x82\xfc\x37\x6b\x6b\x4d\x6f\x0d\xea\x6d\x50\xc2\x8f\xb7\xf2\xe9\x4d\x3c\x11\xa5\x32\x9f\xd9\xac\xce\x5c\x86\x59\x93\xee\xd4\x3d\x3b\x73\xf0\xf1\xf1\x33\x89\xc0\x1e\xb8\x5b\xa8\x7b\xf7\xc0\xe3\xcf\xd3\xd3\x74\xb7\x9c\x52\x9c\x44\x71\xfe\x95\x0f\xdb\xd3\xd3\xfd\x43\x9a\xb7\x9d\x5f\x25\xdf\x2f\xae\x74\x9f\xf5\x42\xcd\x6f\xfe\x6f\x68\x03\xb7\x18\x28\x49\x17\xc8\x7d\x2e\x1c\x61\xa0\x43\xff\x27\x36\x9d\x6e\xc3\x86\xfb\xa3\xd1\xf0\xef\xb6\x77\x58\x7f\xc0\x86\x12\x9b\xde\x5f\x3f\x2c\x30\x47\xbf\x35\x82\xdf\x2c\x30\xf7\x4e\xf0\x7a\xd1\xe4\x2d\x3a\x32\xe1\x83\x95\x94\x2b\xe3\xc9\x85\x77\x54\x59\x47\x49\x84\x79\x56\xb2\x7d\x7a\xe8\x85\x6c\xac\x72\xc6\x06\xbe\x58\xc6\x8a\x62\xb3\xd9\xe4\x75\x4f\xca\x1c\x47\x56\x72\x61\x9b\x62\x7a\xfb\xec\x59\xc6\x6a\x3c\x19\xd0\x1a\x13\x36\x20\x62\x19\xb0\xdd\xee\x79\x65\xe2\x39\x76\xc1\xb2\xa3\x69\x89\x56\x9e\x8c\x8c\xb2\xd8\x99\xf1\x63\x87\x3d\xab\xf7\x50\x6e\x32\x72\xbf\x9f\x95\xc5\xf0\xc1\x52\x16\xc3\x17\xdb\x3f\x01\x00\x00\xff\xff\x6b\xad\x2f\x46\xc2\x09\x00\x00")

func assetsWrapHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsWrapHtml,
		"assets/wrap.html",
	)
}

func assetsWrapHtml() (*asset, error) {
	bytes, err := assetsWrapHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/wrap.html", size: 2498, mode: os.FileMode(420), modTime: time.Unix(1449768986, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/full.md": assetsFullMd,
	"assets/index.md": assetsIndexMd,
	"assets/models.md": assetsModelsMd,
	"assets/repos.md": assetsReposMd,
	"assets/style.css": assetsStyleCss,
	"assets/wrap.html": assetsWrapHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"full.md": &bintree{assetsFullMd, map[string]*bintree{
		}},
		"index.md": &bintree{assetsIndexMd, map[string]*bintree{
		}},
		"models.md": &bintree{assetsModelsMd, map[string]*bintree{
		}},
		"repos.md": &bintree{assetsReposMd, map[string]*bintree{
		}},
		"style.css": &bintree{assetsStyleCss, map[string]*bintree{
		}},
		"wrap.html": &bintree{assetsWrapHtml, map[string]*bintree{
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, path.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

